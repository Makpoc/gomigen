// Code generated by middleware generator version "test" DO NOT EDIT.

package interfacesmw

import (
	"context"

	"github.com/Makpoc/gomigen/test/integration/testdata/tabletests/interfaces"
	"github.com/Makpoc/gomigen/types"
)

type ReturnsMultipleValuesWithErrorMiddleware struct {
	next interfaces.ReturnsMultipleValuesWithError
	hook types.Hook
}

// if this check fails middleware needs to be re-generated.
var _ interfaces.ReturnsMultipleValuesWithError = (*ReturnsMultipleValuesWithErrorMiddleware)(nil)

func NewReturnsMultipleValuesWithErrorMiddleware(
	next interfaces.ReturnsMultipleValuesWithError,
	hook types.Hook,
) *ReturnsMultipleValuesWithErrorMiddleware {
	return &ReturnsMultipleValuesWithErrorMiddleware{
		next: next,
		hook: hook,
	}
}

func (mw *ReturnsMultipleValuesWithErrorMiddleware) Process(arg0 int) (int, error) {
	methodInfo := types.MethodInfo{
		Package:   "github.com/Makpoc/gomigen/test/integration/testdata/tabletests/interfaces",
		Interface: "ReturnsMultipleValuesWithError",
		Method:    "Process",
	}

	ctx := context.Background()

	ctx = mw.hook.OnEntry(ctx, methodInfo)
	res0, res1 := mw.next.Process(arg0)
	mw.hook.OnExit(ctx, methodInfo, res1)
	return res0, res1
}
